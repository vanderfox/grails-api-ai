buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id "com.jfrog.bintray" version "1.2"
}
version "0.1.2"
group "org.grails.plugins"


apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin: "org.grails.grails-plugin"
//apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:'maven-publish'
/*
apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'
*/


repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"

    // api ai
    compile group: 'ai.api.libai.web', name: 'libai-web-servlet', version: '1.4.8'
    // api ai deps
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
            def descriptor =
                    artifacts = ["build/libs/grails-api-ai-${version}.jar",sourcesJar]

        }
    }
}

bintray {
    pkg {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
        userOrg = 'vanderfox' // If you want to publish to an organization
        name = "grails-api-ai"
        repo = "grails-api-ai"
        issueTrackerUrl = "https://github.com/vanderfox/grails-api-ai/issues"
        vcsUrl = "https://github.com/vanderfox/grails-api-ai"
        publications = ['mavenJava']
        version {
            attributes = ['grails-api-ai': "$project.group:grails-api-ai"]
            name = project.version
        }
    }
}
